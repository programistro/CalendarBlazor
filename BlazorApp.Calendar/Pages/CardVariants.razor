@using Microsoft.EntityFrameworkCore
@using BlazorApp.Calendar.Models
@using BlazorApp.Calendar.Data
@using BlazorApp.Calendar.Services

@attribute [StreamRendering(true)]
@inherits BlazorApp.Calendar.Models.DbContextPage
@inject TeacherContext dataContext
@inject DialogService DialogService
@inject DataTeacherServices DataService

@if (dataContext.Teachers != null)
{
    <RadzenPanel AllowCollapse="true" Class="rz-my-10 rz-mx-auto" Style="width: 1200px;">
        <HeaderTemplate>
            <RadzenText TextStyle="TextStyle.H6" Class="rz-display-flex rz-align-items-center rz-m-0">
                <RadzenIcon Icon="account_box" class="rz-mr-1" /><b>Преподователи</b>
            </RadzenText>
        </HeaderTemplate>
        <ChildContent>
            <RadzenCard  class="rz-mt-4">
                <RadzenDataList PageSize="4" WrapItems="true" AllowPaging="true" 
                                Data="@teachers" TItem="Teacher">
                    <Template Context="teachers">
                        <RadzenCard Style="width: 250px">
                            @*<hr style="border: none; background-color: var(--rz-text-disabled-color); height: 1px; margin: 1rem 0;" />*@
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                                <RadzenImage Path="@teachers.PathToPhoto" Style="width: 80px; height: 80px; border-radius: 50%" AlternateText="@(teachers.Name)" />
                                <RadzenStack Gap="0">
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">ФИО</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body1"><b>@(teachers.Name)</b></RadzenText>
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Должность</RadzenText>
                                    <RadzenText TextStyle="TextStyle.Body1"><b>@(teachers.Post)</b></RadzenText>
                                </RadzenStack>
                            </RadzenStack>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </RadzenCard>
        </ChildContent>
        <SummaryTemplate>
            <RadzenCard class="rz-mt-4">
                <b>@teachers.Count() Преподователей</b>
            </RadzenCard>
        </SummaryTemplate>
    </RadzenPanel>
}

<div>
    <button @onclick="AddUser" class="btn btn-primary">Добавить сотрудника</button>
</div>

@code 
{
    private string NameTeacher;
    Variant variant = Variant.Filled;
    
    protected override void OnInitialized()
    {
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        teachers = dataContext.Teachers.ToList();
    }
    IEnumerable<Teacher> teachers;
    
    private async void AddUser()
    {   
        Teacher data = await DialogService.OpenAsync<AddTeacherPage>("Добавить учителя в бд");
        
        if (data != null)
        {
            var existingTeacher = dataContext.Teachers.Find(data.Name);
            if (existingTeacher == null)
            {
                dataContext.Teachers.Add(data);
                
                List<Teacher> teacherList = teachers.ToList();
                teacherList.Add(data);
                teachers = teacherList;

                
                dataContext.SaveChanges();
                
                StateHasChanged();
            }
        }
        StateHasChanged();
    }
}
